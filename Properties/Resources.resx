<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cirl" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxEAAAsRAX9kX5EAAAOVSURBVGhD3ZrRh1VRFMaHISIi
        5ikihp5iiIgYYojoKYaeYoghhoghIiIiSgwRPUVEREREDDFEREREr/0BPcXt+93Od62z7773njn3zNxd
        D78ZZ529z1nf2fusvdc6d67X6/0X/P3zcKdL5sUpcUZcDawK7Isi168VXQs5KW6Jj6LXgF/ilbgiFkTu
        mo3oQshBsSl+iOjkb4GgD+Jx4LnA/k3E9vBeMGK5+4xlWiEIiI58FrcFUyfXPoWHcFE8FT+Fr/NaXBC5
        PlnaCmGufxK+8X3RxZxnNBgVX3dLMF1zbWu0EYLTvhFP8rTItZuGa+KL8H04zrUbsBshRwVPyBdfF7l2
        XRIf2p3KlqWpkGPCInhhl0Su3V5wXVgMwnJtGgk5JCyC/0dErt1eQni2GILJUJsmQh4Jizhc2WZBFDP0
        zkwSwuLmzscr2yyJ06wW4scJIey506XKVgIOAE+CbawQvxdjo8WM2Bb4xnrWt40SsiI8Gmz+4rkSuCzw
        jUW5bxsl5KWoKS4QNpv4iKisELYaJY+GOS/wkWmWFUKcpgERK3YsEe+gF3NCvlcnSwi3k7gr8HUzFcJW
        hBPkFmmnEjkr8Hc7FbJWnajF6IIhn8FfOBCF3KuMN0TaqVScFy1FIQ5pZG1ph1Ihdcbn1SjERYOmqWoJ
        eAeyHoUMwplIO5RKLXJZiCshRK+0Q6lkhVAFwdgo4S+EBwKfN6KQd5XxnEg7lApLBT6vRSHk4xhL3iym
        uHy0HIU4AxuZ5BeIC3sLUchgyRdphxI5IfD3K/5HIWzbOQFUT9KOpUFtDV+3UiEwWCmr45J5K/B1JSfE
        Ccub6rhUqHziJ8znhMTptRd13a7wQthPAHNCYEPQiCJ1tJeC8ybofyAaJSSOSj+5Lwyv5oxK3zZKCLAo
        0phQXFIEs18wKOGOEwLeIlP/zZ3fb/gKYBG1+u8kIRQg3HEwjDOCp+8tFFOrdn6SEGA9sZiblW2/QYRn
        B/+H2jQRAl5BYb/3YWybngmLyOZKTYVA/D4x8oId0/ieuxEC5CkvBBfeEdwo125aKPPwFcAiJs6C3QqB
        OF+BrUyXVZf0232j0m0bISb9Js4GjnymzZRbFkRFl2uBUWhcBJlGiCEQONc3HBMqOccCRnnJsCnFRgTk
        JY6/eIBW3+67EGL4OMRTTH+T0gRGlinVunDepZAIVRieOu8SI0Phz/BOYeNlZh831a+CTE3Iv09v7g9W
        18RbGhKfEAAAAABJRU5ErkJggg==
</value>
  </data>
</root>